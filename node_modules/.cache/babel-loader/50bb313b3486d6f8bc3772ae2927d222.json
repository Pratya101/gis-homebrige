{"remainingRequest":"/Users/pratyaphocha/village-servay/node_modules/babel-loader/lib/index.js!/Users/pratyaphocha/village-servay/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pratyaphocha/village-servay/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratyaphocha/village-servay/src/pages/User/Profile/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratyaphocha/village-servay/src/pages/User/Profile/Profile.vue","mtime":1623036518000},{"path":"/Users/pratyaphocha/village-servay/node_modules/cache-loader/dist/cjs.js","mtime":1626176668222},{"path":"/Users/pratyaphocha/village-servay/node_modules/babel-loader/lib/index.js","mtime":1626179369206},{"path":"/Users/pratyaphocha/village-servay/node_modules/cache-loader/dist/cjs.js","mtime":1626176668222},{"path":"/Users/pratyaphocha/village-servay/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1626179382467}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICIvVXNlcnMvcHJhdHlhcGhvY2hhL3ZpbGxhZ2Utc2VydmF5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1vY2sgZnJvbSAnLi9tb2NrJzsKaW1wb3J0IGNvbmZpZyBmcm9tICJAL2NvbmZpZyI7CmltcG9ydCBBcGV4Q2hhcnQgZnJvbSAndnVlLWFwZXhjaGFydHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Byb2ZpbGUnLAogIGNvbXBvbmVudHM6IHsKICAgIEFwZXhDaGFydDogQXBleENoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbW9jazogbW9jaywKICAgICAgY29uZmlnOiBjb25maWcsCiAgICAgIGFycmF5RXZlbnRzOiBudWxsLAogICAgICBhcGV4TG9hZGluZzogZmFsc2UsCiAgICAgIGFwZXhQaWU6IHsKICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICBkYXRhTGFiZWxzOiB7CiAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgY29sb3JzOiBbY29uZmlnLmxpZ2h0LnByaW1hcnksIGNvbmZpZy5saWdodC5zZWNvbmRhcnksIGNvbmZpZy5saWdodC5zdWNjZXNzLCBjb25maWcubGlnaHQud2FybmluZ10sCiAgICAgICAgICBsYWJlbHM6IFsiTmV3IiwgIlByb2dyZXNzIiwgIkNvbXBsZXRlZCIsICJDYW5jZWxlZCJdLAogICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgIHBvc2l0aW9uOiAnYm90dG9tJywKICAgICAgICAgICAgbWFya2VyczogewogICAgICAgICAgICAgIHdpZHRoOiA4LAogICAgICAgICAgICAgIGhlaWdodDogOAogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgc3Ryb2tlOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IHRoaXMuZ2VuZXJhdGVQaWVTZXJpZXMoKQogICAgICB9LAogICAgICBhcGV4QXJlYTE6IHsKICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICBjaGFydDogewogICAgICAgICAgICBpZDogJ2FwZXhBcmVhRmlyc3QnLAogICAgICAgICAgICBzcGFya2xpbmU6IHsKICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBjb2xvcnM6IFtjb25maWcubGlnaHQuc2Vjb25kYXJ5XSwKICAgICAgICAgIGZpbGw6IHsKICAgICAgICAgICAgdHlwZTogJ3NvbGlkJywKICAgICAgICAgICAgb3BhY2l0eTogMC4zCiAgICAgICAgICB9LAogICAgICAgICAgc3Ryb2tlOiB7CiAgICAgICAgICAgIHdpZHRoOiAyLAogICAgICAgICAgICBjdXJ2ZTogJ3Ntb290aCcKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIGRhdGE6IFs1MCwgNTYsIDUyLCA1MSwgNTIsIDU1LCA1M10KICAgICAgICB9XQogICAgICB9LAogICAgICBwaWNrZXI6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYmdTdHlsZTogZnVuY3Rpb24gYmdTdHlsZShjb2xvcikgewogICAgICB2YXIgX2NvbG9yID0gX3NsaWNlZFRvQXJyYXkoY29sb3IsIDMpLAogICAgICAgICAgciA9IF9jb2xvclswXSwKICAgICAgICAgIGcgPSBfY29sb3JbMV0sCiAgICAgICAgICBiID0gX2NvbG9yWzJdOwoKICAgICAgcmV0dXJuIHsKICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKCIuY29uY2F0KHIsICIsIikuY29uY2F0KGcsICIsIikuY29uY2F0KGIsICIsIDAuMikiKQogICAgICB9OwogICAgfSwKICAgIGdlbmVyYXRlUGllU2VyaWVzOiBmdW5jdGlvbiBnZW5lcmF0ZVBpZVNlcmllcygpIHsKICAgICAgdmFyIHNlcmllcyA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyBpKyspIHsKICAgICAgICB2YXIgeSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICg1MDAgLSAxMDAgKyAxMDApKSArIDEwMDsKICAgICAgICBzZXJpZXMucHVzaCh5KTsKICAgICAgfQoKICAgICAgcmV0dXJuIHNlcmllczsKICAgIH0sCiAgICBwcmV2OiBmdW5jdGlvbiBwcmV2KCkgewogICAgICB0aGlzLiRyZWZzLmNhbGVuZGFyLnByZXYoKTsKICAgIH0sCiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KCkgewogICAgICB0aGlzLiRyZWZzLmNhbGVuZGFyLm5leHQoKTsKICAgIH0sCiAgICBkYXRlRnVuY3Rpb25FdmVudHM6IGZ1bmN0aW9uIGRhdGVGdW5jdGlvbkV2ZW50cyhkYXRlKSB7CiAgICAgIHZhciBfZGF0ZSRzcGxpdCA9IGRhdGUuc3BsaXQoJy0nKSwKICAgICAgICAgIF9kYXRlJHNwbGl0MiA9IF9zbGljZWRUb0FycmF5KF9kYXRlJHNwbGl0LCAzKSwKICAgICAgICAgIGRheSA9IF9kYXRlJHNwbGl0MlsyXTsKCiAgICAgIGlmIChbMTIsIDE3LCAyOF0uaW5jbHVkZXMocGFyc2VJbnQoZGF5LCAxMCkpKSByZXR1cm4gdHJ1ZTsKICAgICAgaWYgKFsxLCAxOSwgMjJdLmluY2x1ZGVzKHBhcnNlSW50KGRheSwgMTApKSkgcmV0dXJuIFsnc3VjY2Vzc0NvbnN0JywgJ3NlY29uZGFyeUNvbnN0J107CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5hcGV4TG9hZGluZyA9IHRydWU7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container fluid class=\"px-0\">\n    <div class=\"profile-page\">\n      <v-row>\n        <v-col md=5 sm=\"6\" cols=12>\n          <v-row>\n            <v-col cols=\"12\">\n              <v-card class=\"user-card ma-1\" min-height=\"282\">\n                <v-card-text class=\"pa-5 pt-9 fill-height\">\n                  <v-row no-gutters class=\"fill-height\">\n                    <v-col cols=\"12\" sm=\"5\" xl=\"6\" class=\"d-flex justify-center align-center flex-column\">\n                      <div\n                        class=\"avatar-wrapper\">\n                        <v-img\n                          class=\"user-avatar\"\n                          contain\n                          src=\"@/assets/img/user/profile/photo.png\"></v-img>\n                      </div>\n                      <v-chip\n                        small\n                        class=\"mr-2 mt-4 mb-4 mb-sm-0\"\n                        color=\"error\"\n                      >Pro</v-chip>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"7\" xl=\"6\" class=\"pl-0 pl-sm-4 d-flex flex-column align-center align-sm-start\"  >\n                      <p class=\"user-name greyMedium--text font-weight-regular\">สวัสดี ชาวโลก</p>\n                      <p class=\"user-work greyTint--text ma-0\">Product Designer</p>\n                      <a class=\"body-1\">Flatlogic.com</a>\n                      <div class=\"d-flex justify-center justify-sm-start flex-wrap mt-5\">\n                        <v-chip v-for=\"(chip, i) in mock.chips\"\n                          :key=\"i\"\n                          small\n                          :style=bgStyle(chip.bgColor)\n                          :class=\"chip.color + '--text font-weight-bold mr-2 mr-lg-1 mr-lg-2 my-1 px-2'\"\n                          label\n                        >{{ chip.title }}</v-chip>\n                      </div>\n                      <div class=\"mt-5\">\n                        <v-btn v-for=\"(btn, i) in mock.buttons\"\n                           :key=\"i\"\n                           icon\n                           class=\"mr-0 mr-sm-n2 mr-lg-0\"\n                        >\n                          <v-icon color=\"greyTint\">{{ btn }}</v-icon>\n                        </v-btn>\n                      </div>\n                    </v-col>\n                  </v-row>\n                </v-card-text>\n              </v-card>\n            </v-col>\n            <v-col cols=\"12\" md=\"6\">\n              <v-card class=\"media-card ma-1\" min-height=\"296\">\n                <v-card-title class=\"pa-5 pb-3\">\n                  <p>Media</p>\n                  <v-spacer></v-spacer>\n                  <v-menu>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-select\n                        class=\"main-chart-select greyBold--text\"\n                        v-model=\"mock.sel\"\n                        :value=\"mock.select[0]\"\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        dense\n                        flat\n                        single-line\n                        hide-details\n                        :items=\"mock.select\"\n                      ></v-select>\n                    </template>\n                  </v-menu>\n                </v-card-title>\n                <v-card-text class=\"pa-5 pb-0 pt-5\">\n                  <v-row no-gutters class=\"pb-6\">\n                    <v-col cols=\"6\" class=\"d-flex align-center flex-column\">\n                      <v-img src=\"@/assets/img/user/profile/media/posts.svg\" height=\"30\" width=\"30\"></v-img>\n                      <p class=\"greyBold--text text-h6 mb-n2\">198</p>\n                      <p class=\"media-subtitle\">Posts</p>\n                    </v-col>\n                    <v-col cols=\"6\" class=\"d-flex align-center flex-column\">\n                      <v-img src=\"@/assets/img/user/profile/media/projects.svg\" height=\"30\" width=\"30\"></v-img>\n                      <p class=\"greyBold--text text-h6 mb-n2\">554</p>\n                      <p class=\"media-subtitle\">Projects</p>\n                    </v-col>\n                    <v-col cols=\"6\" class=\"d-flex align-center flex-column\">\n                      <v-img src=\"@/assets/img/user/profile/media/followers.svg\" height=\"30\" width=\"30\"></v-img>\n                      <p class=\"greyBold--text text-h6 mb-n2\">12.8k</p>\n                      <p class=\"media-subtitle\">Followers</p>\n                    </v-col>\n                    <v-col cols=\"6\" class=\"d-flex align-center flex-column\">\n                      <v-img src=\"@/assets/img/user/profile/media/following.svg\" height=\"30\" width=\"30\"></v-img>\n                      <p class=\"greyBold--text text-h6 mb-n2\">1.1k</p>\n                      <p class=\"media-subtitle\">Following</p>\n                    </v-col>\n                  </v-row>\n                </v-card-text>\n              </v-card>\n            </v-col>\n            <v-col cols=\"12\" md=\"6\">\n              <v-card class=\"pie-card ma-1\" min-height=\"296\">\n                <v-card-title class=\"pa-5 pb-3\">\n                  <p>Projects</p>\n                  <v-spacer></v-spacer>\n                  <v-menu>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-select\n                        class=\"main-chart-select\"\n                        v-model=\"mock.sel1\"\n                        :value=\"mock.select[0]\"\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        dense\n                        flat\n                        single-line\n                        hide-details\n                        :items=\"mock.select\"\n                      ></v-select>\n                    </template>\n                  </v-menu>\n                </v-card-title>\n                <v-card-text class=\"pa-5 pt-0\">\n                  <v-row no-gutters class=\"pb-0\">\n                    <v-col cols=\"12\">\n                      <ApexChart\n                        v-if=\"apexLoading\"\n                        height=\"194\"\n                        type=\"donut\"\n                        :options=\"apexPie.options\"\n                        :series=\"apexPie.series\">\n                      </ApexChart>\n                    </v-col>\n                    <v-col cols=\"12\" class=\"d-flex flex-column align-end mt-3\">\n                      <v-btn\n                        color=\"primaryConst\"\n                        outlined\n                      >Detail</v-btn>\n                    </v-col>\n                  </v-row>\n                </v-card-text>\n              </v-card>\n            </v-col>\n            <v-col cols=\"12\" class=\"pb-0 pb-sm-3\">\n              <v-card class=\"article-card ma-1\">\n                <v-card-title class=\"pa-5 pb-3\">\n                  <p>Top 5 react native starter kits</p>\n                </v-card-title>\n                <v-card-text class=\"pa-5 pt-0\">\n                  <v-row>\n                    <v-col cols=\"5\">\n                      <v-img src=\"@/assets/img/user/profile/article-logo.png\"></v-img>\n                    </v-col>\n                    <v-col cols=\"7\">\n                      <p class=\"article-writer greyTint--text\">Nastassia Ovchinnikova</p>\n                      <p class=\"article-text greyBold--text\">React Native allows us to create a boilerplate that have been crafted for both platforms.\n                        The ability to create an app both for Android and iOS...</p>\n                      <p class=\"article-info greyTint--text\"> 11 Feb 2019 | 5 min read</p>\n                    </v-col>\n                  </v-row>\n                </v-card-text>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-col>\n        <v-col md=7 sm=\"6\" cols=12 class=\"pt-0 pt-sm-3\">\n          <v-row>\n            <v-col cols=\"12\">\n              <v-card class=\"folder-card ma-1\" min-height=\"282\">\n                <v-card-title class=\"pa-5 pb-3\">\n                  <p>Files</p>\n                </v-card-title>\n                <v-card-text class=\"pa-5 pt-0\">\n                  <v-tabs color=\"secondary\">\n                    <v-tabs-slider></v-tabs-slider>\n                    <v-tab\n                      v-for=\"(tab, i) in mock.tabs\"\n                      class=\"text-capitalize font-weight-regular\"\n                      :key=\"i\"\n                      :href=\"'#tab-' + tab.tabName.toLocaleLowerCase()\">\n                      {{ tab.tabName }}\n                    </v-tab>\n                    <v-tab-item\n                      v-for=\"(tab, i) in mock.tabs\"\n                      :key=\"i\"\n                      :value=\"'tab-' + tab.tabName.toLocaleLowerCase()\"\n                      class=\"pb-0 pb-sm-3 pb-lg-0\"\n                    >\n                      <v-divider></v-divider>\n                      <v-row justify-xl=\"space-around\" justify=\"start\"  class=\"d-flex flex-nowrap overflow-x-auto pa-4 pt-5\">\n                        <div\n                           v-for=\"(img, i) in mock.images\"\n                           :key=\"i\">\n                          <v-img\n                            :src=\"$vuetify.theme.dark ? img.srcDark : img.src\"\n                            width=\"141\" height=\"106\" contain\n                            class=\"folder-image mr-3\"\n                          >\n                            <p class=\"folder-title\"> {{ img.title }} </p>\n                            <p class=\"folder-subtitle-1 font-weight-medium\"> {{img.subtitle}} </p>\n                          </v-img>\n                        </div>\n                      </v-row>\n                    </v-tab-item>\n                  </v-tabs>\n                </v-card-text>\n              </v-card>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col cols=\"12\" md=\"7\">\n              <v-card class=\"tasks-card ma-1\">\n                <v-card-title class=\"pa-5 pb-3\">\n                  <p>Tasks</p>\n                  <v-spacer></v-spacer>\n                  <v-menu>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-select\n                        class=\"main-chart-select font-weight-regular greyMedium--text\"\n                        v-model=\"mock.sel2\"\n                        :value=\"mock.taskSelect[0]\"\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        dense\n                        flat\n                        single-line\n                        hide-details\n                        :items=\"mock.taskSelect\"\n                      ></v-select>\n                    </template>\n                  </v-menu>\n                </v-card-title>\n                <v-card-text class=\"pa-5 pt-0 pb-2\">\n                  <v-row no-gutters>\n                    <v-tabs color=\"secondary\">\n                      <v-tabs-slider></v-tabs-slider>\n                      <v-tab\n                        v-for=\"(tab, i) in mock.taskTabs\"\n                        :key=\"i\"\n                        :href=\"'#tab-' + tab.tabLink\"\n                        class=\"text-capitalize font-weight-regular\">\n                        {{ tab.tabName }}\n                      </v-tab>\n                      <v-tab-item\n                        value=\"tab-today\"\n                        class=\"pt-0\">\n                        <v-row no-gutters class=\"flex-column flex-nowrap overflow-hidden pr-0\"\n                          v-for=\"(task, i) in mock.tasks.tasksToday\"\n                          :key=\"i\"\n                          style=\"width: 100%; cursor:pointer;\"\n                          :class=\"{ done:task.done }\">\n                          <v-divider></v-divider>\n                          <v-col\n                            cols=\"12\"\n                            class=\"d-flex justify-space-between align-center py-3\">\n                            <div class=\"d-flex align-center\" @click=\"$set(task, 'done', !task.done)\">\n                              <p\n                                class=\"task-time mb-0 \"\n                                style=\"font-size: 10px\">{{ task.time }}</p>\n                              <v-icon class=\"task-circle ml-1\" :color=\"task.color\">mdi-circle-medium</v-icon>\n                              <p class=\"task-text greyBold--text mb-0 font-weight-medium\" style=\"line-height: 25px;\">{{ task.task }}</p>\n                            </div>\n                            <v-menu>\n                              <template v-slot:activator=\"{ on, attrs }\">\n                                <v-btn\n                                  icon\n                                  v-bind=\"attrs\"\n                                  v-on=\"on\">\n                                  <v-icon color=\"greyTint\">mdi-dots-vertical</v-icon>\n                                </v-btn>\n                              </template>\n                              <v-list>\n                                <v-list-item\n                                  v-for=\"(item, i) in mock.taskMenu\"\n                                  :key=\"i\"\n                                  @click=\"() => {}\">\n                                  <v-list-item-title>{{ item }}</v-list-item-title>\n                                </v-list-item>\n                              </v-list>\n                            </v-menu>\n                          </v-col>\n                        </v-row>\n                      </v-tab-item>\n                      <v-tab-item\n                        value=\"tab-week\"\n                        class=\"pt-0\">\n                        <v-row no-gutters class=\"flex-column flex-nowrap overflow-hidden pr-0\"\n                         v-for=\"(task, i) in mock.tasks.tasksWeek\"\n                         :key=\"i * 10\"\n                         style=\"width: 100%; cursor:pointer;\"\n                         :class=\"{ done:task.done }\"\n                         @click=\"$set(task, 'done', !task.done)\">\n                          <v-divider></v-divider>\n                          <v-col\n                            cols=\"12\"\n                            class=\"d-flex justify-space-between align-center py-3\">\n                            <div class=\"d-flex align-center\">\n                              <p\n                                class=\"task-time mb-0 \"\n                                style=\"font-size: 10px\">{{ task.time }}</p>\n                              <v-icon class=\"task-circle ml-1\" :color=\"task.color\">mdi-circle-medium</v-icon>\n                              <p class=\"task-text greyBold--text mb-0 font-weight-medium\" style=\"line-height: 25px;\">{{ task.task }}</p>\n                            </div>\n                            <div>\n                              <v-btn icon>\n                                <v-icon color=\"greyTint\" class=\"right\">mdi-dots-vertical</v-icon>\n                              </v-btn>\n                            </div>\n                          </v-col>\n                        </v-row>\n                      </v-tab-item>\n                      <v-tab-item\n                        value=\"tab-month\"\n                        class=\"pt-0\">\n                        <v-row no-gutters class=\"flex-column flex-nowrap overflow-hidden\"\n                         v-for=\"(task, i) in mock.tasks.tasksWeek\"\n                         :key=\"i * 100\"\n                         style=\"width: 100%; cursor:pointer;\"\n                         :class=\"{ done:task.done }\"\n                         @click=\"$set(task, 'done', !task.done)\">\n                          <v-divider></v-divider>\n                          <v-col\n                              cols=\"12\"\n                              class=\"d-flex justify-space-between align-center py-3\">\n                            <div class=\"d-flex align-center\">\n                              <p\n                                class=\"task-time mb-0\"\n                                style=\"font-size: 10px\"\n                              >{{ task.time }}</p>\n                              <v-icon class=\"task-circle ml-1\" :color=\"task.color\">mdi-circle-medium</v-icon>\n                              <p class=\"task-text greyBold--text mb-0 font-weight-medium\">{{ task.task }}</p>\n                            </div>\n                            <div>\n                              <v-btn icon>\n                                <v-icon color=\"greyTint\" class=\"right\">mdi-dots-vertical</v-icon>\n                              </v-btn>\n                            </div>\n                          </v-col>\n\n                        </v-row>\n                      </v-tab-item>\n                    </v-tabs>\n                  </v-row>\n                </v-card-text>\n              </v-card>\n            </v-col>\n            <v-col cols=\"12\" md=\"5\">\n              <v-row no-gutters>\n                <v-col cols=\"12\" class=\"mb-6\">\n                  <v-card class=\"calendar-card ma-1\">\n                    <v-col>\n                      <v-date-picker\n                        v-model=\"picker\"\n                        :events=\"dateFunctionEvents\"\n                        color=\"primaryConst\"\n                        full-width\n                        flat\n                        no-title\n                      ></v-date-picker>\n                    </v-col>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" class=\"mb-6\">\n                  <v-card class=\"view-card ma-1\">\n                    <v-card-title class=\"pa-5 pb-3\">\n                      <p>Views</p>\n                      <v-spacer></v-spacer>\n                      <v-menu>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-btn\n                            icon\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                          >\n                            <v-icon color=\"greyTint\">mdi-dots-vertical</v-icon>\n                          </v-btn>\n                        </template>\n                        <v-list>\n                          <v-list-item\n                              v-for=\"(item, i) in mock.menu\"\n                              :key=\"i\"\n                              @click=\"() => {}\"\n                          >\n                            <v-list-item-title>{{ item }}</v-list-item-title>\n                          </v-list-item>\n                        </v-list>\n                      </v-menu>\n                    </v-card-title>\n                    <v-card-text class=\"pa-5 pt-0\">\n                      <v-row no-gutters>\n                        <v-col cols=\"5\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"3\">\n                          <p class=\"views-value greyBold--text text-h5 mb-0\">7,156</p>\n                          <p class=\"views-percent success--text mb-4\">7.2%</p>\n                          <v-btn\n                            color=\"primary\"\n                            outlined\n                            small\n                            class=\"text-capitalize\"\n                          >See More</v-btn>\n                        </v-col>\n                        <v-col cols=\"6\" offset=\"1\" sm=\"6\" offset-sm=\"0\" md=\"5\" offset-md=\"2\" lg=\"5\" offset-lg=\"2\" xl=\"8\" offset-xl=\"1\" class=\"d-flex align-end\">\n                          <ApexChart v-if=\"apexLoading\" ref=\"apexView\" height=\"80\" type=\"area\" :options=\"apexArea1.options\" :series=\"apexArea1.series\"></ApexChart>\n                        </v-col>\n                      </v-row>\n                    </v-card-text>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" class=\"mb-6\">\n                  <v-card class=\"update-card primaryConst ma-1\" height=\"80\">\n                    <v-row no-gutters align=\"center\" justify=\"center\" class=\"pa-5 pt-0\">\n                      <v-col cols=\"12\" class=\"d-flex align-center\" style=\"height: 80px\">\n                        <div class=\"image-wrapper\" style=\"height: 36px\">\n                          <v-img\n                            src=\"@/assets/img/user/profile/update-icon.svg\"\n                            contain\n                          ></v-img>\n                        </div>\n                        <p class=\"upd-text text-truncate white--text mb-0 ml-3\">Updates</p>\n                        <v-spacer></v-spacer>\n                        <v-btn\n                          outlined\n                          class=\"white--text text-capitalize\"\n                          >Detail</v-btn>\n                      </v-col>\n                    </v-row>\n                  </v-card>\n                </v-col>\n              </v-row>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport mock from './mock'\nimport config from \"@/config\"\nimport ApexChart from 'vue-apexcharts'\n\nexport default {\n  name: 'Profile',\n  components: {\n    ApexChart\n  },\n  data() {\n    return {\n      mock,\n      config,\n      arrayEvents: null,\n      apexLoading: false,\n      apexPie: {\n        options: {\n          dataLabels: {\n            enabled: false\n          },\n          colors: [config.light.primary, config.light.secondary, config.light.success, config.light.warning],\n          labels: [\"New\", \"Progress\", \"Completed\", \"Canceled\"],\n          legend: {\n            position: 'bottom',\n            markers: {\n              width: 8,\n              height: 8,\n            },\n          },\n            stroke: {\n              show: false,\n            },\n        },\n        series: this.generatePieSeries()\n      },\n      apexArea1: {\n        options: {\n          chart: {\n            id: 'apexAreaFirst',\n            sparkline: {\n              enabled: true\n            },\n          },\n          colors: [config.light.secondary],\n          fill: {\n            type: 'solid',\n            opacity: 0.3,\n          },\n          stroke: {\n            width: 2,\n            curve: 'smooth'\n          },\n        },\n        series: [\n          {\n            data: [50, 56, 52, 51, 52, 55, 53]\n          }\n        ],\n      },\n      picker: new Date().toISOString().substr(0, 10),\n    }\n  },\n  methods: {\n    bgStyle: function(color) {\n      const [r, g, b] = color;\n      return {\n        backgroundColor: `rgba(${r},${g},${b}, 0.2)`\n      };\n    },\n    generatePieSeries() {\n      let series = [];\n      for (let i = 0; i < 4; i++) {\n        let y = Math.floor(Math.random() * (500 - 100 + 100)) + 100;\n        series.push(y)\n      }\n      return series;\n    },\n    prev () {\n      this.$refs.calendar.prev()\n    },\n    next () {\n      this.$refs.calendar.next()\n    },\n    dateFunctionEvents (date) {\n      const [,, day] = date.split('-')\n      if ([12, 17, 28].includes(parseInt(day, 10))) return true\n      if ([1, 19, 22].includes(parseInt(day, 10))) return ['successConst', 'secondaryConst']\n      return false\n    },\n  },\n  mounted() {\n    setTimeout(() => {\n      this.apexLoading = true\n      }\n    )\n  }\n}\n</script>\n\n<style src=\"./Profile.scss\" lang=\"scss\"/>\n"],"sourceRoot":"src/pages/User/Profile"}]}